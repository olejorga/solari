// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Solari.Data.Access;

namespace Solari.Data.Access.Migrations
{
    [DbContext(typeof(SolariContext))]
    partial class SolariContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Solari.Data.Access.Models.Airline", b =>
                {
                    b.Property<string>("Icao")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Iata")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Icao");

                    b.ToTable("Airlines");
                });

            modelBuilder.Entity("Solari.Data.Access.Models.Airport", b =>
                {
                    b.Property<string>("Icao")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Iata")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Icao");

                    b.ToTable("Airports");
                });

            modelBuilder.Entity("Solari.Data.Access.Models.Flight", b =>
                {
                    b.Property<string>("FlightNumber")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("AirlineIcao")
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("ArrivalAirportIcao")
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("ArrivalGate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArrivalTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartureAirportIcao")
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("DepartureGate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartureTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FlightNumber");

                    b.HasIndex("AirlineIcao");

                    b.HasIndex("ArrivalAirportIcao");

                    b.HasIndex("DepartureAirportIcao");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("Solari.Data.Access.Models.Flight", b =>
                {
                    b.HasOne("Solari.Data.Access.Models.Airline", "Airline")
                        .WithMany("Flights")
                        .HasForeignKey("AirlineIcao");

                    b.HasOne("Solari.Data.Access.Models.Airport", "ArrivalAirport")
                        .WithMany("ArrivingFlights")
                        .HasForeignKey("ArrivalAirportIcao");

                    b.HasOne("Solari.Data.Access.Models.Airport", "DepartureAirport")
                        .WithMany("DepartingFlights")
                        .HasForeignKey("DepartureAirportIcao");

                    b.Navigation("Airline");

                    b.Navigation("ArrivalAirport");

                    b.Navigation("DepartureAirport");
                });

            modelBuilder.Entity("Solari.Data.Access.Models.Airline", b =>
                {
                    b.Navigation("Flights");
                });

            modelBuilder.Entity("Solari.Data.Access.Models.Airport", b =>
                {
                    b.Navigation("ArrivingFlights");

                    b.Navigation("DepartingFlights");
                });
#pragma warning restore 612, 618
        }
    }
}
